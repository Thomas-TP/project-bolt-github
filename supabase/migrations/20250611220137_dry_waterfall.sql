/*
  # Promouvoir leolebg1999@gmail.com en admin et ajouter suppression tickets

  1. Mise √† jour utilisateur
    - Promouvoir leolebg1999@gmail.com en admin
    - Mettre √† jour les informations du profil

  2. Nouvelles fonctionnalit√©s
    - Politique pour supprimer les tickets (admins seulement)
    - Fonction pour supprimer un ticket avec ses d√©pendances
*/

-- Promouvoir l'utilisateur en admin
UPDATE users 
SET 
  role = 'admin',
  full_name = 'L√©o Admin',
  company = 'HelpDesk Pro',
  department = 'Administration',
  updated_at = now()
WHERE email = 'leolebg1999@gmail.com';

-- Ajouter une politique pour permettre aux admins de supprimer les tickets
CREATE POLICY "Admins can delete tickets"
  ON tickets
  FOR DELETE
  TO authenticated
  USING (
    EXISTS (
      SELECT 1 FROM users
      WHERE id = auth.uid() AND role = 'admin'
    )
  );

-- Fonction pour supprimer un ticket avec toutes ses d√©pendances
CREATE OR REPLACE FUNCTION delete_ticket_cascade(ticket_id uuid)
RETURNS boolean AS $$
DECLARE
  current_user_role user_role;
BEGIN
  -- V√©rifier que l'utilisateur est admin
  SELECT role INTO current_user_role
  FROM users
  WHERE id = auth.uid();
  
  IF current_user_role != 'admin' THEN
    RAISE EXCEPTION 'Seuls les administrateurs peuvent supprimer des tickets';
  END IF;
  
  -- Supprimer les fichiers associ√©s au ticket
  DELETE FROM file_storage 
  WHERE name LIKE 'ticket_' || ticket_id || '%' 
     OR name LIKE 'message_' || ticket_id || '%';
  
  -- Supprimer les messages du ticket (cascade automatique)
  DELETE FROM messages WHERE ticket_id = delete_ticket_cascade.ticket_id;
  
  -- Supprimer les notifications li√©es au ticket
  DELETE FROM notifications 
  WHERE action_url LIKE '%/tickets/' || ticket_id || '%';
  
  -- Supprimer le ticket lui-m√™me
  DELETE FROM tickets WHERE id = delete_ticket_cascade.ticket_id;
  
  -- Cr√©er une notification pour l'√©quipe
  INSERT INTO notifications (user_id, title, message, type)
  SELECT 
    u.id,
    'Ticket supprim√©',
    'Un ticket a √©t√© supprim√© par un administrateur',
    'warning'
  FROM users u 
  WHERE u.role IN ('agent', 'admin') AND u.is_active = true;
  
  RETURN true;
END;
$$ LANGUAGE plpgsql SECURITY DEFINER;

-- V√©rifier que la promotion a fonctionn√©
DO $$
DECLARE
  user_record RECORD;
BEGIN
  SELECT * INTO user_record
  FROM users
  WHERE email = 'leolebg1999@gmail.com';
  
  IF user_record.role = 'admin' THEN
    RAISE NOTICE '‚úÖ Utilisateur leolebg1999@gmail.com promu en admin avec succ√®s !';
    RAISE NOTICE 'üë§ Nom: %', user_record.full_name;
    RAISE NOTICE 'üè¢ Entreprise: %', user_record.company;
    RAISE NOTICE 'üîß D√©partement: %', user_record.department;
    RAISE NOTICE 'üîë R√¥le: %', user_record.role;
  ELSE
    RAISE NOTICE '‚ùå √âchec de la promotion. R√¥le actuel: %', COALESCE(user_record.role::text, 'non trouv√©');
  END IF;
END $$;

-- Message de confirmation
DO $$
BEGIN
  RAISE NOTICE '';
  RAISE NOTICE 'üéâ CONFIGURATION ADMIN TERMIN√âE !';
  RAISE NOTICE '';
  RAISE NOTICE '‚úÖ Fonctionnalit√©s ajout√©es:';
  RAISE NOTICE '   - Compte leolebg1999@gmail.com promu en admin';
  RAISE NOTICE '   - Politique de suppression des tickets';
  RAISE NOTICE '   - Fonction de suppression en cascade';
  RAISE NOTICE '   - Nettoyage automatique des d√©pendances';
  RAISE NOTICE '';
  RAISE NOTICE 'üîß Prochaines √©tapes:';
  RAISE NOTICE '   1. Rechargez votre application';
  RAISE NOTICE '   2. Reconnectez-vous pour actualiser vos permissions';
  RAISE NOTICE '   3. Testez la suppression d''un ticket';
  RAISE NOTICE '';
END $$;